server:
  port: 8098
spring:
  application:
    name: tomorr
  pid:
    file: ${TOMORR_PID_FILE}
    fail-on-write-error: true
  messages:
    basename: messages/messages
  quartz:
    job-store-type: jdbc
    startup-delay: 15s
    properties:
      org:
        quartz:
          scheduler:
            instanceName: tomorr-scheduler
            instanceId: AUTO
          threadPool:
            threadCount: 10
          jobStore:
            driverDelegateClass: org.quartz.impl.jdbcjobstore.PostgreSQLDelegate
            useProperties: true
            tablePrefix: qrtz_
            misfireThreshold: 60000
            isClustered: true
            clusterCheckinInterval: 10000
  mail:
    host: ${TOMORR_MAIL_HOST:localhost}
    username: ${TOMORR_MAIL_USERNAME:mailusername}
    password: ${TOMORR_MAIL_PASSWORD:mailpassword}
    port: ${TOMORR_MAIL_PORT:25}
    properties:
      mail:
        auth: ${TOMORR_MAIL_AUTH:false}
        starttls:
          enable: ${TOMORR_MAIL_TLS:false}
          required: ${TOMORR_MAIL_TLS:false}
        smtp:
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000
mail:
  from: noreply@tomorr.com
datasource:
  url: ${TOMORR_DB_URL}
  username: ${TOMORR_DB_USERNAME}
  password: ${TOMORR_DB_PASSWORD}
spotify:
  client-id: ${TOMORR_SPOTIFY_CLIENT_ID}
  client-secret: ${TOMORR_SPOTIFY_CLIENT_SECRET}
  user-agent: tomorr/0.0.1
  auth-url: https://accounts.spotify.com/api/token
  api-url: https://api.spotify.com/v1
redis:
  host: ${TOMORR_REDIS_HOST:localhost}
  port: ${TOMORR_REDIS_PORT:6379}
rabbitmq:
  host: ${TOMORR_RABBITMQ_HOST:localhost}
  port: ${TOMORR_RABBITMQ_PORT:5672}
  username: ${TOMORR_RABBITMQ_USERNAME:guest}
  password: ${TOMORR_RABBITMQ_PASSWORD:guest}
  use-ssl: ${TOMORR_RABBITMQ_SSL:false}
request-limit:
  spotify-sync: 600
  spotify-search: 150
logging:
  level:
    com:
      kushtrimh:
        tomorr:
          spotify:
            http: INFO