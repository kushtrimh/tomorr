/*
 * This file is generated by jOOQ.
 */
package com.kushtrimh.tomorr.dal.tables;


import com.kushtrimh.tomorr.dal.Keys;
import com.kushtrimh.tomorr.dal.Public;
import com.kushtrimh.tomorr.dal.tables.records.QrtzPausedTriggerGrpsRecord;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;

import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QrtzPausedTriggerGrps extends TableImpl<QrtzPausedTriggerGrpsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.qrtz_paused_trigger_grps</code>
     */
    public static final QrtzPausedTriggerGrps QRTZ_PAUSED_TRIGGER_GRPS = new QrtzPausedTriggerGrps();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<QrtzPausedTriggerGrpsRecord> getRecordType() {
        return QrtzPausedTriggerGrpsRecord.class;
    }

    /**
     * The column <code>public.qrtz_paused_trigger_grps.sched_name</code>.
     */
    public final TableField<QrtzPausedTriggerGrpsRecord, String> SCHED_NAME = createField(DSL.name("sched_name"), SQLDataType.VARCHAR(120).nullable(false), this, "");

    /**
     * The column <code>public.qrtz_paused_trigger_grps.trigger_group</code>.
     */
    public final TableField<QrtzPausedTriggerGrpsRecord, String> TRIGGER_GROUP = createField(DSL.name("trigger_group"), SQLDataType.VARCHAR(200).nullable(false), this, "");

    private QrtzPausedTriggerGrps(Name alias, Table<QrtzPausedTriggerGrpsRecord> aliased) {
        this(alias, aliased, null);
    }

    private QrtzPausedTriggerGrps(Name alias, Table<QrtzPausedTriggerGrpsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.qrtz_paused_trigger_grps</code> table reference
     */
    public QrtzPausedTriggerGrps(String alias) {
        this(DSL.name(alias), QRTZ_PAUSED_TRIGGER_GRPS);
    }

    /**
     * Create an aliased <code>public.qrtz_paused_trigger_grps</code> table reference
     */
    public QrtzPausedTriggerGrps(Name alias) {
        this(alias, QRTZ_PAUSED_TRIGGER_GRPS);
    }

    /**
     * Create a <code>public.qrtz_paused_trigger_grps</code> table reference
     */
    public QrtzPausedTriggerGrps() {
        this(DSL.name("qrtz_paused_trigger_grps"), null);
    }

    public <O extends Record> QrtzPausedTriggerGrps(Table<O> child, ForeignKey<O, QrtzPausedTriggerGrpsRecord> key) {
        super(child, key, QRTZ_PAUSED_TRIGGER_GRPS);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public UniqueKey<QrtzPausedTriggerGrpsRecord> getPrimaryKey() {
        return Keys.QRTZ_PAUSED_TRIGGER_GRPS_PKEY;
    }

    @Override
    public List<UniqueKey<QrtzPausedTriggerGrpsRecord>> getKeys() {
        return Arrays.<UniqueKey<QrtzPausedTriggerGrpsRecord>>asList(Keys.QRTZ_PAUSED_TRIGGER_GRPS_PKEY);
    }

    @Override
    public QrtzPausedTriggerGrps as(String alias) {
        return new QrtzPausedTriggerGrps(DSL.name(alias), this);
    }

    @Override
    public QrtzPausedTriggerGrps as(Name alias) {
        return new QrtzPausedTriggerGrps(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public QrtzPausedTriggerGrps rename(String name) {
        return new QrtzPausedTriggerGrps(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public QrtzPausedTriggerGrps rename(Name name) {
        return new QrtzPausedTriggerGrps(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<String, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
