/*
 * This file is generated by jOOQ.
 */
package com.kushtrimh.tomorr.dal.tables.records;


import com.kushtrimh.tomorr.dal.tables.ArtistAppUser;
import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
@Entity
@Table(
        name = "artist_app_user",
        schema = "public",
        uniqueConstraints = {
                @UniqueConstraint(name = "artist_app_user_pkey", columnNames = {"artist_id", "app_user_id"})
        }
)
public class ArtistAppUserRecord extends UpdatableRecordImpl<ArtistAppUserRecord> implements Record2<String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.artist_app_user.artist_id</code>.
     */
    public void setArtistId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.artist_app_user.artist_id</code>.
     */
    @Column(name = "artist_id", nullable = false, length = 32)
    public String getArtistId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.artist_app_user.app_user_id</code>.
     */
    public void setAppUserId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.artist_app_user.app_user_id</code>.
     */
    @Column(name = "app_user_id", nullable = false, length = 32)
    public String getAppUserId() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<String, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<String, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<String, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return ArtistAppUser.ARTIST_APP_USER.ARTIST_ID;
    }

    @Override
    public Field<String> field2() {
        return ArtistAppUser.ARTIST_APP_USER.APP_USER_ID;
    }

    @Override
    public String component1() {
        return getArtistId();
    }

    @Override
    public String component2() {
        return getAppUserId();
    }

    @Override
    public String value1() {
        return getArtistId();
    }

    @Override
    public String value2() {
        return getAppUserId();
    }

    @Override
    public ArtistAppUserRecord value1(String value) {
        setArtistId(value);
        return this;
    }

    @Override
    public ArtistAppUserRecord value2(String value) {
        setAppUserId(value);
        return this;
    }

    @Override
    public ArtistAppUserRecord values(String value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ArtistAppUserRecord
     */
    public ArtistAppUserRecord() {
        super(ArtistAppUser.ARTIST_APP_USER);
    }

    /**
     * Create a detached, initialised ArtistAppUserRecord
     */
    public ArtistAppUserRecord(String artistId, String appUserId) {
        super(ArtistAppUser.ARTIST_APP_USER);

        setArtistId(artistId);
        setAppUserId(appUserId);
    }
}
